        -:    0:Source:src/triangulo.cpp
        -:    0:Programs:18
        -:    1:#include <iostream>
        -:    2:#include "triangulo.h"
        -:    3:#include "excecoes.h"
        -:    4:
       12:    5:Triangulo::Triangulo(double x, double y, double z) throw(TrianguloInvalidoError) {
       12:    6:    if ((x <= 0) || (y <= 0) || (z <= 0)) {
        8:    7:        throw TrianguloInvalidoError();
        -:    8:    }
        8:    9:    if (!((x > abs(y - z)) && (x < (y + z)))) {
        4:   10:        throw TrianguloInvalidoError();
        -:   11:    }
        6:   12:    if (!((y > abs(x - z)) && (x < (x + z)))) {
    #####:   13:        throw TrianguloInvalidoError();
        -:   14:    }
        6:   15:    if (!((z > abs(y - x)) && (x < (y + x)))) {
    #####:   16:        throw TrianguloInvalidoError();
        -:   17:    }
        -:   18:    
        6:   19:    _x = x;
        6:   20:    _y = y;
        6:   21:    _z = z;
        6:   22:}
        -:   23:
        6:   24:Tipo Triangulo::determinar_tipo() { 
        6:   25:    if (_x == _y) {
        5:   26:        if (_x == _z) {
        -:   27:            return Tipo::EQUILATERO;
        -:   28:        } else {
        1:   29:            return Tipo::ISOSCELES;
        -:   30:        }
        -:   31:    }
        1:   32:    else if (_x == _z) {
        -:   33:        if (_x == _y) {
        -:   34:            return Tipo::EQUILATERO;
        -:   35:        } else {
        -:   36:            return Tipo::ISOSCELES;
        -:   37:        }
        -:   38:    }
        1:   39:    else if (_z == _y) {
        -:   40:        if (_z == _x) {
        -:   41:            return Tipo::EQUILATERO;
        -:   42:        } else {
    #####:   43:            return Tipo::ISOSCELES;
        -:   44:        }
        -:   45:    }
        -:   46:    else {
        -:   47:        return Tipo::ESCALENO;
        -:   48:    }
        -:   49:}
        -:   50:
    #####:   51:double Triangulo::getX() { return _x; }
    #####:   52:double Triangulo::getY() { return _y; }
        4:   53:double Triangulo::getZ() { return _z; }
